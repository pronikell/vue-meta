'use strict';

require('path');
require('hable');
require('signal-exit');
require('os');
require('child_process');
require('tree-kill');
require('./tib-index.js');
require('vue-template-compiler');
require('./tib-webpage.js');
require('crypto');
require('fs');
require('util');
require('glob');
require('webpack');
require('@babel/core');
require('@babel/parser');
require('http');
const index = require('./tib-index3.js');

class SafariSeleniumBrowser extends index['default'] {
  constructor(config) {
    super(config);

    this.setBrowser('safari');

    /* istanbul ignore next */
    this.hook('selenium:build:before', async (builder) => {
      const options = new SafariSeleniumBrowser.Options();

      await this.callHook('selenium:build:options', options, builder);

      builder.setSafariOptions(options);
    });
  }

  /* istanbul ignore next */
  async _loadDependencies() {
    super._loadDependencies();

    // there is no separate safaridriver, it should already be installed

    if (!SafariSeleniumBrowser.Options) {
      const { Options } = await this.loadDependency('selenium-webdriver/safari');
      SafariSeleniumBrowser.Options = Options;
    }
  }
}

exports.default = SafariSeleniumBrowser;
