{"code":"export async function renderMetaToString(app, ctx = {}) {\r\n    // TODO: better way of determining whether meta was rendered with the component or not\r\n    if (!ctx.teleports || !ctx.teleports.head) {\r\n        const { renderToString } = await import('@vue/server-renderer');\r\n        const teleports = app.config.globalProperties.$metaManager?.render();\r\n        await Promise.all(teleports.map((teleport) => renderToString(teleport, ctx)));\r\n    }\r\n    const { teleports } = ctx;\r\n    for (const target in teleports) {\r\n        if (target.endsWith('Attrs')) {\r\n            const str = teleports[target];\r\n            // match from first space to first >, these should be all rendered attributes\r\n            teleports[target] = str.slice(str.indexOf(' ') + 1, str.indexOf('>'));\r\n        }\r\n    }\r\n    return ctx;\r\n}\r\n//# sourceMappingURL=ssr.js.map","references":["/tmp/b/vue-meta/node_modules/vue/dist/vue.d.ts","/tmp/b/vue-meta/node_modules/@vue/server-renderer/dist/server-renderer.d.ts","/tmp/b/vue-meta/node_modules/@vue/server-renderer/dist/server-renderer.d.ts"],"map":"{\"version\":3,\"file\":\"ssr.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/ssr.ts\"],\"names\":[],\"mappings\":\"AAGA,MAAM,CAAC,KAAK,UAAU,kBAAkB,CAAE,GAAQ,EAAE,MAAkB,EAAE;IACtE,sFAAsF;IACtF,IAAI,CAAC,GAAG,CAAC,SAAS,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE;QACzC,MAAM,EAAE,cAAc,EAAE,GAAG,MAAM,MAAM,CAAC,sBAAsB,CAAC,CAAA;QAE/D,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,MAAM,EAAE,CAAA;QACpE,MAAM,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,cAAc,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA;KACnF;IAED,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAA;IACzB,KAAK,MAAM,MAAM,IAAI,SAAS,EAAE;QAC9B,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YAC5B,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,CAAA;YAE7B,6EAA6E;YAC7E,SAAS,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA;SACtE;KACF;IAED,OAAO,GAAG,CAAA;AACZ,CAAC\"}"}
