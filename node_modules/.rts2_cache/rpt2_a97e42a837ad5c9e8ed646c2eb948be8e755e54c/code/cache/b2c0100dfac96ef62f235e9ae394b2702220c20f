{"code":"export const hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nexport const PolySymbol = (name) => \r\n// vm = vue meta\r\nhasSymbol\r\n    ? Symbol(true ? '[vue-meta]: ' + name : name)\r\n    : (true ? '[vue-meta]: ' : '_vm_') + name;\r\nexport const metaActiveKey = /*#__PURE__*/ PolySymbol(true ? 'meta_active' : 'ma');\r\n//# sourceMappingURL=symbols.js.map","references":["/tmp/b/vue-meta/node_modules/vue/dist/vue.d.ts","/tmp/b/vue-meta/src/types/index.ts"],"map":"{\"version\":3,\"file\":\"symbols.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/symbols.ts\"],\"names\":[],\"mappings\":\"AAGA,MAAM,CAAC,MAAM,SAAS,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,QAAQ,CAAA;AAE/F,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,IAAY,EAAE,EAAE;AACzC,gBAAgB;AAChB,SAAS;IACP,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7C,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAA;AAE7C,MAAM,CAAC,MAAM,aAAa,GAAG,aAAa,CAAC,UAAU,CACnD,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CACA,CAAA\"}","dtsmap":{"name":"/tmp/b/vue-meta/node_modules/.rts2_cache/placeholder/src/symbols.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"symbols.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/symbols.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,KAAK,CAAA;AAClC,OAAO,EAAE,UAAU,EAAE,MAAM,SAAS,CAAA;AAEpC,eAAO,MAAM,SAAS,SAAyE,CAAA;AAE/F,eAAO,MAAM,UAAU,SAAU,MAAM,oBAIM,CAAA;AAE7C,eAAO,MAAM,aAAa,0BAEG,CAAA\"}"},"dts":{"name":"/tmp/b/vue-meta/node_modules/.rts2_cache/placeholder/src/symbols.d.ts","writeByteOrderMark":false,"text":"import { InjectionKey } from 'vue';\r\nimport { MetaActive } from './types';\r\nexport declare const hasSymbol: boolean;\r\nexport declare const PolySymbol: (name: string) => string | symbol;\r\nexport declare const metaActiveKey: InjectionKey<MetaActive>;\r\n//# sourceMappingURL=symbols.d.ts.map"}}
