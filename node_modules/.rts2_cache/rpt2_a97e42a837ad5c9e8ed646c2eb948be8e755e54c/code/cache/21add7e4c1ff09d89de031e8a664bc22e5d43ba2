{"code":"export {};\r\n//# sourceMappingURL=config.js.map","references":[],"map":"{\"version\":3,\"file\":\"config.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/types/config.ts\"],\"names\":[],\"mappings\":\"\"}","dtsmap":{"name":"/tmp/b/vue-meta/node_modules/.rts2_cache/placeholder/src/types/config.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"config.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/types/config.ts\"],\"names\":[],\"mappings\":\"AACA,oBAAY,oBAAoB,GAAG,KAAK,GAAG,IAAI,GAAG,cAAc,GAAG,gBAAgB,GAAG,UAAU,GAAG,OAAO,GAAG,YAAY,GAAG,qBAAqB,GAAG,eAAe,CAAA;AAEnK,MAAM,WAAW,oBAAoB;IACnC,GAAG,CAAC,EAAE,MAAM,CAAA;IACZ,EAAE,CAAC,EAAE,MAAM,CAAA;IACX,YAAY,CAAC,EAAE,MAAM,CAAA;IACrB,cAAc,CAAC,EAAE,MAAM,CAAA;IACvB,QAAQ,CAAC,EAAE,OAAO,CAAA;CACnB;AAED,oBAAY,sBAAsB,GAAG;IACnC,KAAK,EAAE,OAAO,CAAA;IACd,UAAU,CAAC,EAAE,OAAO,CAAA;IACpB,mBAAmB,CAAC,EAAE,OAAO,CAAA;CAC9B,CAAA;AAED,oBAAY,0BAA0B,GAAG;IACvC,aAAa,EAAE,MAAM,CAAA;CACtB,CAAA;AAED,oBAAY,iBAAiB,GAAG,sBAAsB,GAAG,oBAAoB,GAAG,0BAA0B,CAAA;AAE1G,MAAM,WAAW,UAAU;IACzB,CAAC,GAAG,EAAE,MAAM,GAAG,iBAAiB,CAAA;CACjC;AAED,oBAAY,gBAAgB,GAAG,cAAc,GAAG,oBAAoB,GAAG,YAAY,CAAA;AAEnF,MAAM,WAAW,aAAa;IAC5B,YAAY,CAAC,EAAE,MAAM,CAAA;IACrB,kBAAkB,CAAC,EAAE,OAAO,GAAG,MAAM,CAAA;IACrC,UAAU,EAAE,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAA;CACpC;AAED,oBAAY,WAAW,GAAG,OAAO,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO,GAAG,QAAQ,GAAG,UAAU,CAAA;AAE9F,oBAAY,cAAc,GAAG;KAC1B,GAAG,IAAI,WAAW,GAAG,aAAa;CACpC,CAAA\"}"},"dts":{"name":"/tmp/b/vue-meta/node_modules/.rts2_cache/placeholder/src/types/config.d.ts","writeByteOrderMark":false,"text":"export declare type MetaConfigSectionKey = 'tag' | 'to' | 'keyAttribute' | 'valueAttribute' | 'nameless' | 'group' | 'namespaced' | 'namespacedAttribute' | 'attributesFor';\r\nexport interface MetaConfigSectionTag {\r\n    tag?: string;\r\n    to?: string;\r\n    keyAttribute?: string;\r\n    valueAttribute?: string;\r\n    nameless?: boolean;\r\n}\r\nexport declare type MetaConfigSectionGroup = {\r\n    group: boolean;\r\n    namespaced?: boolean;\r\n    namespacedAttribute?: boolean;\r\n};\r\nexport declare type MetaConfigSectionAttribute = {\r\n    attributesFor: string;\r\n};\r\nexport declare type MetaConfigSection = MetaConfigSectionGroup | MetaConfigSectionTag | MetaConfigSectionAttribute;\r\nexport interface MetaConfig {\r\n    [key: string]: MetaConfigSection;\r\n}\r\nexport declare type MetaTagConfigKey = 'keyAttribute' | 'contentAsAttribute' | 'attributes';\r\nexport interface MetaTagConfig {\r\n    keyAttribute?: string;\r\n    contentAsAttribute?: boolean | string;\r\n    attributes: boolean | Array<string>;\r\n}\r\nexport declare type MetaTagName = 'title' | 'base' | 'meta' | 'link' | 'style' | 'script' | 'noscript';\r\nexport declare type MetaTagsConfig = {\r\n    [key in MetaTagName]: MetaTagConfig;\r\n};\r\n//# sourceMappingURL=config.d.ts.map"}}
