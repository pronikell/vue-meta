{"code":"import { isArray, isObject, isPlainObject } from '@vue/shared';\r\nimport { clone, pluck } from '../utils';\r\nimport { RESOLVE_CONTEXT } from './constants';\r\nexport const allKeys = (source, ...sources) => {\r\n    const keys = source ? Object.keys(source) : [];\r\n    if (sources) {\r\n        for (const source of sources) {\r\n            if (!source || !isObject(source)) {\r\n                continue;\r\n            }\r\n            for (const key in source) {\r\n                if (!keys.includes(key)) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // TODO: add check for consistent types for each key (dev only)\r\n    return keys;\r\n};\r\nexport const recompute = (context, path = [], target, sources) => {\r\n    const setTargetAndSources = !target && !sources;\r\n    if (setTargetAndSources) {\r\n        ({ active: target, sources } = context);\r\n        if (path.length) {\r\n            for (let i = 0; i < path.length; i++) {\r\n                const seg = path[i];\r\n                if (!target || !target[seg]) {\r\n                    if (true) {\r\n                        // eslint-disable-next-line no-console\r\n                        console.error(`recompute: segment ${seg} not found on target`, path, target);\r\n                    }\r\n                    return;\r\n                }\r\n                target = target[seg];\r\n                sources = sources.map(source => source[seg]).filter(Boolean);\r\n            }\r\n        }\r\n    }\r\n    if (!target || !sources) {\r\n        return;\r\n    }\r\n    const keys = allKeys(...sources);\r\n    // Clean up properties that dont exists anymore\r\n    const targetKeys = Object.keys(target);\r\n    for (const key of targetKeys) {\r\n        if (!keys.includes(key)) {\r\n            delete target[key];\r\n        }\r\n    }\r\n    for (const key of keys) {\r\n        // This assumes consistent types usages for keys across sources\r\n        // @ts-ignore\r\n        let isObject = false;\r\n        for (let i = 0; i < sources.length; i++) {\r\n            const source = sources[i];\r\n            if (source && key in source && source[key] !== undefined) {\r\n                isObject = isPlainObject(source[key]);\r\n                break;\r\n            }\r\n        }\r\n        if (isObject) {\r\n            if (!target[key]) {\r\n                target[key] = {};\r\n            }\r\n            const keySources = [];\r\n            for (const source of sources) {\r\n                if (key in source) {\r\n                    // @ts-ignore\r\n                    keySources.push(source[key]);\r\n                }\r\n            }\r\n            recompute(context, [...path, key], target[key], keySources);\r\n            continue;\r\n        }\r\n        // Ensure the target is an array if source is an array and target is empty\r\n        // @ts-ignore\r\n        if (!target[key] && isArray(sources[0][key])) {\r\n            target[key] = [];\r\n        }\r\n        const keyContexts = [];\r\n        const keySources = pluck(sources, key, source => keyContexts.push(source[RESOLVE_CONTEXT]));\r\n        let resolved = context.resolve(keySources, keyContexts, target[key], key, path);\r\n        if (isPlainObject(resolved)) {\r\n            resolved = clone(resolved);\r\n        }\r\n        target[key] = resolved;\r\n    }\r\n};\r\n//# sourceMappingURL=recompute.js.map","references":["/tmp/b/vue-meta/node_modules/@vue/shared/dist/shared.d.ts","/tmp/b/vue-meta/src/utils/index.ts","/tmp/b/vue-meta/src/object-merge/constants.ts","/tmp/b/vue-meta/src/object-merge/index.ts"],"map":"{\"version\":3,\"file\":\"recompute.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/object-merge/recompute.ts\"],\"names\":[],\"mappings\":\"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\"}"}
